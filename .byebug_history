exit
next
user_params
User.all
next
User.all
continue
exit
@user.errors
next
User.all
user_params
exit
continue
exit
authorize_request
exit
Authorization.authorize_request
authorize_request
Authorization
exit
Authorization
authorize_request
exit
authorize_request
Authorization
include EzJwt::Authorization
Authorization.authorize_request
Authorization
authorize_request
exit
Authorization.authorizerequest
Authorization
exit
Authorization.authorize_request
Authorization
exit
JsonWebToken.encode
Authorization.authorize_request
Authorization
JsonWebToken
exit
EzJwt::Authorization.authorize_request
EzJwt::Authorization
Authorization
exit
Authorization.authorize_request
Authorization
EzJwt::Authorization.authorize_request
authorize_request
exit
EzJwt::Authorization.authorize_request
authorize_request
exit
EzJwt::Authorization.authorize_request
EzJwt::Authentication.authorize_request
exit
authorize_request
continue
exit
EzJwt::authorize_request
authorize_request
continue
exit
auth_login_path
rails routes
users_path
exit
@token
next
step
exit
JsonWebToken.encode(user_id: @user.id)
EzJwt::JsonWebToken.encode(user_id: @user.id)
exit
JsonWebToken.encode(user_id: @user.id)
EzJwt::JsonWebToken.encode(user_id: @user.id)
exit
JsonWebToken.encode(user_id: @user.id)
@user.id
exit
next
@user&.authenticate(params[:user][:password])
params[:user]
params
@user
